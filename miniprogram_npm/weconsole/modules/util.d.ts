import { WcListFilterHandler } from '../types/util';
import { MpStackInfo } from '../types/common';
import { WeConsoleScope } from '../types/scope';
export declare const now: () => number;
export declare const getGlobal: () => any;
export declare const wcScope: () => WeConsoleScope;
export declare const wcScopeSingle: <T = any>(name: string, creater?: Function) => T | Promise<T>;
export declare const isMpViewEvent: (obj: any) => any;
export declare const $$getStack: () => MpStackInfo[];
export declare const log: (type?: string, ...args: any[]) => any;
export declare const FILTER_BREAK: unique symbol;
export declare const filter: <T = any>(list: T[], filter: WcListFilterHandler<T>) => T[];
export declare const hookApiMethodCallback: (apiName: string, onSuccess: Function, onFail: Function, args: any[]) => any[];
export declare const toHump: (name: string) => string;
export declare const promiseifyApi: (apiName: string, ...apiArgs: any[]) => Promise<any>;
export declare const getMpViewType: (obj: any) => 'App' | 'Page' | 'Component' | undefined;
export declare const has: (obj: any, prop: string) => boolean;
export declare const EACH_BREAK: unique symbol;
export declare const each: (obj: any, handler: Function) => void;

{"version":3,"file":"index.cjs.js","sources":["../mpspec.ts"],"sourcesContent":["import { MpPlatform } from \"./platform\";\nimport { MkOmit, MkRequireAll } from \"./util\";\n\nexport type MkMpSDKVersion<\n    N extends number = number,\n    S extends string = `${N}.${N}.${N}`\n> = S;\n\nexport interface LikeMkMpSDKVersionSupport {\n    supportVersion?: MkMpSDKVersion;\n}\nexport interface MkMpSDKVersionSupport\n    extends MkRequireAll<LikeMkMpSDKVersionSupport> {}\n\n// xml绑定变量语法，如：{{xx}}\nexport interface LikeMkMpXmlDataBinding {\n    // 左边界字符串\n    leftBoundaryChar?: string;\n    // 右边界字符串\n    rightBoundaryChar?: string;\n    // 左边界符距离内容可被允许包含的空白字符数量，小于0|undefined=允许左边界与内容之间出现空白字符且不限数量；0=不允许；大于0代表必须有，且数量一致\n    leftBoundarySpace?: number;\n    // 右边界符距离内容可被允许包含的空白字符数量，小于0|undefined=允许左边界与内容之间出现空白字符且不限数量；0=不允许；大于0代表必须有，且数量一致\n    rightBoundarySpace?: number;\n}\nexport interface MkMpXmlDataBinding\n    extends MkRequireAll<LikeMkMpXmlDataBinding> {}\n\n// 是否支持数据绑定\nexport interface MkMpXmlSupportDataBinding {\n    // 是否支持变量绑定\n    dataBinding?: MkMpXmlDataBinding;\n    // 支持的变量绑定数量，0代表不支持，小于0代表支持无限个，大于0代表具体数量\n    dataBindingCount?: number;\n}\nexport const enum MkMpXmlAstContentType {\n    static = \"static\",\n    dataBinding = \"dataBinding\",\n}\nexport interface MkMpXmlAstContent {\n    type: MkMpXmlAstContentType;\n    value: string;\n}\n// xml ast 节点\nexport interface MkMpXmlAstNode {\n    name: string;\n    content?: string;\n    mpContents?: MkMpXmlAstContent[];\n}\n// xml ast 属性\nexport interface MkMpXmlAstAttr extends MkMpXmlAstNode {}\n// xml ast 元素\nexport interface MkMpXmlAstElement extends MkMpXmlAstNode {\n    attrs?: MkMpXmlAstAttr[];\n    children?: MkMpXmlAstElement[];\n    // 前一个兄弟：只在非text和comment的node上存在，且Sibling本身也非text和comment\n    previousSibling?: MkMpXmlAstElement;\n    // 后一个兄弟：只在非text和comment的node上存在，且Sibling本身也非text和comment\n    nextSibling?: MkMpXmlAstElement;\n}\n\nexport interface MkMpXmlAstPreviousSiblingFinder {\n    (node: MkMpXmlAstElement, siblings: MkMpXmlAstElement[]): MkMpXmlAstElement;\n}\n\n// xml 属性验证器\nexport interface MkMpXmlNodeValidater {\n    (\n        attr: MkMpXmlAstAttr, // 属性ast对象\n        parent: MkMpXmlAstElement, // 属性的父节点ast对象\n        grandpa?: MkMpXmlAstElement, // 属性的爷爷节点ast对象\n        previousSiblingFinder?: MkMpXmlAstPreviousSiblingFinder // 查找前一个节点的函数\n    ): boolean | MkMpXmlNodeValidateResult;\n}\nexport const enum MkMpXmlNodeValidateResultLevel {\n    success = \"success\",\n    fail = \"fail\",\n    warn = \"warn\",\n    ignore = \"ignore\",\n}\nexport interface MkMpXmlNodeValidateResult {\n    pass: boolean;\n    level: MkMpXmlNodeValidateResultLevel;\n    code: string;\n    message: string;\n}\nexport enum MkMpXmlAttrContentType {\n    string = \"string\",\n    boolean = \"boolean\",\n    number = \"number\",\n}\n// xml 属性 技术特性\nexport interface LikeMkMpXmlAttrSpec\n    extends MkMpXmlSupportDataBinding,\n        LikeMkMpSDKVersionSupport {\n    // 内容必选？0|undefined=可有可没有，小于0=必须没有，1=必须有，但是可为空，大于1=必须有，且不为空（含任意字符串）\n    requireContent?: number;\n    // 是否必选？0|undefined=可有可没有，小于0=必须没有，大于0=必须有\n    require?: number;\n    // 该属性是否是事件绑定\n    isEvent?: boolean;\n    // 内容类型\n    contentType?: MkMpXmlAttrContentType | MkMpXmlAttrContentType[];\n    // 默认内容\n    defaultContent?: any;\n    validater?: MkMpXmlNodeValidater;\n}\n\nexport interface MkMpXmlAttrSpec\n    extends MkOmit<\n        MkRequireAll<LikeMkMpXmlAttrSpec>,\n        \"defaultContent\" | \"validater\"\n    > {\n    defaultContent?: any;\n    validater?: MkMpXmlNodeValidater;\n}\n\nexport interface MkMpXmlNodeSpecMap<T> {\n    // 匹配所有目标节点\n    _common?: T;\n    // 指定的名称均匹配不上时，采用此特性，最后采用的特性将是_common&&_unclaimed\n    _unclaimed?: T;\n    // 按照名称匹配，最后的该名称对应的节点特定将是此属性与_common的合并体\n    [p: string]: T;\n}\n\nexport interface LikeMkMpXmlElementSpec\n    extends MkMpXmlSupportDataBinding,\n        LikeMkMpSDKVersionSupport {\n    // 节点关闭类型，0|undefined=自关闭或结束标签关闭均可以；小于0=只可以自关闭方式关闭；大于0=必须通过结束标签关闭\n    closeType?: number;\n    // 属性特性\n    attrsSpec?: MkMpXmlNodeSpecMap<LikeMkMpXmlAttrSpec>;\n}\n// xml 节点 技术特性\nexport interface MkMpXmlElementSpec\n    extends MkOmit<MkRequireAll<LikeMkMpXmlElementSpec>, \"attrsSpec\">,\n        MkMpSDKVersionSupport {\n    attrsSpec: MkMpXmlNodeSpecMap<MkMpXmlAttrSpec>;\n}\n// xml 节点对象\nexport interface MkMpXmlElement {\n    id?: string;\n    dataset?: {\n        [p: string]: any;\n    };\n}\n// xml 事件对象\nexport interface MkMpXmlBaseEvent<T = undefined> {\n    type: string;\n    timeStamp: number;\n    target: MkMpXmlElement;\n    currentTarget: MkMpXmlElement;\n    detail?: T;\n}\n\n// xml 事件处理程序\nexport interface MkMpXmlEventHandler<D = undefined, T = MkMpXmlBaseEvent<D>> {\n    (event: T);\n}\n\n// xml 技术特性\nexport interface LikeMkMpXmlSpec\n    extends MkMpXmlNodeSpecMap<LikeMkMpXmlElementSpec> {}\nexport interface MkMpXmlSpec extends MkMpXmlNodeSpecMap<MkMpXmlElementSpec> {}\n\nexport interface MkMpPlatformSpec<T> {\n    [MpPlatform.wechat]: T;\n    [MpPlatform.alipay]: T;\n    [MpPlatform.smart]: T;\n    [MpPlatform.tiktok]: T;\n}\n"],"names":["MkMpXmlAttrContentType"],"mappings":";;;;;;;;;;AAsFA,WAAYA;AACRA,EAAAA,gCAAA,WAAA;AACAA,EAAAA,iCAAA,YAAA;AACAA,EAAAA,gCAAA,WAAA;AACH,CAJD,EAAYA,8BAAsB,KAAtBA,8BAAsB,KAAA,CAAlC;;"}
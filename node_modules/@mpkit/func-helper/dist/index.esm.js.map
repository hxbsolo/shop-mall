{"version":3,"file":"index.esm.js","sources":["../replace.ts","../hook.ts"],"sourcesContent":["import { MkReplaceFuncCallback } from \"@mpkit/types\";\n\nexport function replaceFunc<T extends Function = Function>(\n    original: T,\n    replacer: T,\n    callback?: MkReplaceFuncCallback,\n    data?: any\n): T {\n    let isReplace = true;\n    callback &&\n        callback({\n            data,\n            original,\n            replace() {\n                isReplace = true;\n            },\n            restore() {\n                isReplace = false;\n            },\n        });\n    return (function (...args) {\n        if (isReplace) {\n            return replacer.apply(this, args);\n        } else {\n            return original.apply(this, args);\n        }\n    } as unknown) as T;\n}\n","import {\n    MkFuncHook,\n    MkFuncHookErrorType,\n    MkFuncHookHandler,\n    MkFuncHookName,\n    MkFuncHookResult,\n    MkFuncHookState,\n} from \"@mpkit/types\";\n\n/**使用多种钩子钩住函数，并返回处理后的函数 */\nexport const hookFunc = (() => {\n    const isFunc = (item: any) =>\n        typeof item === \"function\" ||\n        (Array.isArray(item) &&\n            (item as any[]).some((it) => typeof it === \"function\"));\n    const hookNames = [\"before\", \"after\", \"catch\", \"complete\", \"done\"];\n    return <T extends Function = Function, S = any>(\n        func: T,\n        hooksInvariant: boolean,\n        hooks: MkFuncHook<S>[],\n        otherState?: any\n    ): MkFuncHookResult => {\n        let enabled: any = {\n            before: 1,\n            after: 1,\n            catch: 1,\n            complete: 1,\n            done: 1,\n        };\n        const has: any = {};\n\n        const hasHook = (name: MkFuncHookName): boolean => {\n            if (!hooksInvariant) {\n                // 如果hooks不是恒定的，则需要每次动态查询\n                return hooks.some((item) => item && isFunc(item[name]));\n            }\n            if (!(name in has)) {\n                hooks.forEach((item) => {\n                    if (!item) {\n                        return;\n                    }\n                    hookNames.forEach((n) => {\n                        if (isFunc(item[n])) {\n                            has[n] = 1;\n                        }\n                    });\n                });\n                hookNames.forEach((n) => {\n                    if (!(n in has)) {\n                        has[n] = 0;\n                    }\n                });\n            }\n            return has[name];\n        };\n        const targetFunc = (function MkFuncHelperOfHookTarget(...args) {\n            const ctx = this;\n            const state: MkFuncHookState<S> = {\n                ctx,\n                func,\n                args,\n                state: {} as S,\n                stepResultList: [],\n                doneCallback(err: Error, res?: any): any {\n                    if (state.done) {\n                        return;\n                    }\n                    if (err) {\n                        fireCatch(\"RejectReason\", err);\n                        state.fulfilled = false;\n                    } else {\n                        state.value = res;\n                        state.fulfilled = true;\n                    }\n                    fireHook(\"complete\");\n                    checkFireDone(\"callback\");\n                },\n            };\n            if (otherState) {\n                Object.assign(state.state, otherState);\n            }\n\n            const fireHook = (name: MkFuncHookName) => {\n                if (name !== \"done\" && name !== \"catch\" && state.stop) {\n                    return;\n                }\n                let needExec = !enabled[name]\n                    ? false\n                    : hooksInvariant\n                    ? hasHook(name)\n                    : true;\n                if (needExec) {\n                    try {\n                        for (let i = 0, len = hooks.length; i < len; i++) {\n                            const hook = hooks[i];\n                            if (hook && hook[name]) {\n                                if (Array.isArray(hook[name])) {\n                                    const list = hook[\n                                        name\n                                    ] as MkFuncHookHandler<S>[];\n                                    for (\n                                        let j = 0, lj = list.length;\n                                        j < lj;\n                                        j++\n                                    ) {\n                                        state.stepResultList.push({\n                                            step: name,\n                                            result: list[j]\n                                                ? list[j](state)\n                                                : undefined,\n                                        });\n                                        if (\n                                            name !== \"done\" &&\n                                            name !== \"catch\" &&\n                                            state.stop\n                                        ) {\n                                            break;\n                                        }\n                                    }\n                                } else {\n                                    state.stepResultList.push({\n                                        step: name,\n                                        result: (hook[\n                                            name\n                                        ] as MkFuncHookHandler<S>)(state),\n                                    });\n                                }\n                            }\n                            if (\n                                name !== \"done\" &&\n                                name !== \"catch\" &&\n                                state.stop\n                            ) {\n                                break;\n                            }\n                        }\n                    } catch (e) {\n                        const type = `${name[0].toUpperCase()}${name.substr(\n                            1\n                        )}Exception` as MkFuncHookErrorType;\n                        if (name !== \"catch\") {\n                            fireCatch(type, e);\n                        } else {\n                            state.errors.push({\n                                type,\n                                error: e,\n                            });\n                        }\n                    }\n                }\n            };\n            const fireCatch = (type: MkFuncHookErrorType, error) => {\n                if (!state.errors) {\n                    state.errors = [];\n                }\n                state.errors.push({\n                    type,\n                    error,\n                });\n                if (hasHook(\"catch\")) {\n                    try {\n                        fireHook(\"catch\");\n                    } catch (e) {\n                        state.errors.push({\n                            type: \"CatchException\",\n                            error: e,\n                        });\n                    }\n                }\n            };\n            const doneStep: any = {};\n            const checkFireDone = (step: string) => {\n                doneStep[step] = 1;\n                const isPromise =\n                    typeof state.result === \"object\" &&\n                    state.result &&\n                    (state.result.then || state.result.catch);\n                if (state.needDoneCallback && isPromise) {\n                    if (doneStep.promise && doneStep.callback) {\n                        state.done = true;\n                        fireHook(\"done\");\n                    }\n                } else {\n                    state.done = true;\n                    fireHook(\"done\");\n                }\n            };\n            fireHook(\"before\");\n            if (state.stop) {\n                fireHook(\"done\");\n                return state.result;\n            }\n            try {\n                const res = func.apply(ctx, args);\n                state.result = res;\n                fireHook(\"after\");\n                const isPromise =\n                    typeof state.result === \"object\" &&\n                    state.result &&\n                    (state.result.then || state.result.catch);\n                if (state.needDoneCallback || isPromise) {\n                    if (isPromise && state.result.then) {\n                        state.result.then((value) => {\n                            state.value = value;\n                            state.fulfilled = true;\n                            fireHook(\"complete\");\n                            checkFireDone(\"promise\");\n                        });\n                    }\n                    if (isPromise && state.result.catch) {\n                        state.result.catch((e) => {\n                            state.fulfilled = false;\n                            fireCatch(\"RejectReason\", e);\n                            fireHook(\"complete\");\n                            checkFireDone(\"promise\");\n                        });\n                    }\n                } else {\n                    fireHook(\"done\");\n                }\n                return state.result;\n            } catch (e) {\n                fireCatch(\"MethodException\", e);\n                fireHook(\"done\");\n                throw e;\n            }\n        } as unknown) as T;\n        return {\n            func: targetFunc,\n            disable(name?: MkFuncHookName) {\n                if (name) {\n                    enabled[name] = 0;\n                } else {\n                    hookNames.forEach((n) => {\n                        enabled[n] = 0;\n                    });\n                }\n            },\n            enable(name?: MkFuncHookName) {\n                if (name) {\n                    enabled[name] = 1;\n                } else {\n                    hookNames.forEach((n) => {\n                        enabled[n] = 1;\n                    });\n                }\n            },\n        };\n    };\n})();\n"],"names":["replaceFunc","original","replacer","callback","data","isReplace","replace","restore","_i","args","apply","hookFunc","isFunc","item","Array","isArray","some","it","hookNames","func","hooksInvariant","hooks","otherState","enabled","before","after","complete","done","has","hasHook","name","forEach","n","targetFunc","MkFuncHelperOfHookTarget","ctx","state","stepResultList","doneCallback","err","res","fireCatch","fulfilled","value","fireHook","checkFireDone","Object","assign","stop","needExec","i","len","length","hook","list","j","lj","push","step","result","undefined","e","type","toUpperCase","substr","errors","error","doneStep","isPromise","then","needDoneCallback","promise","disable","enable"],"mappings":"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"}